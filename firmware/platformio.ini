; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env:esp32-hardware]
platform = espressif32
board = esp32dev
framework = arduino
monitor_speed = 115200
upload_speed = 921600
extra_scripts = post:scripts/generate_manifest.py

build_flags = 
    -DCORE_DEBUG_LEVEL=3
    -DIZOD_FW_VERSION=\"1.0.0\"
    -DCONFIG_FREERTOS_HZ=1000
    -DCONFIG_FREERTOS_USE_TRACE_FACILITY=1
    -DPLATFORM_ESP32           ; ESP32 platform flag
    -DAUDIO_PCM5102            ; PCM5102 audio DAC
    -DDISPLAY_ST7789           ; ST7789 240x320 TFT display
    -DTOUCH_WHEEL_MPR121       ; MPR121 capacitive touch wheel
    -DLF_RFID_ENABLED          ; LF RFID read/write/emulate
    -DBADUSB_HID_ENABLED       ; BadUSB HID capabilities
    -DPLUGIN_SYSTEM_ENABLED    ; Enable plugin system
    -DAUDIO_SAMPLE_RATE=44100  ; CD quality audio
    -DDISPLAY_WIDTH=240        ; Display width
    -DDISPLAY_HEIGHT=320       ; Display height
    -DHARDWARE_CONFIG_H        ; Use hardware_config.h for pin definitions
    -Iinclude                  ; Add include directory to search path
    
    ; Hardware feature flags
    -DHW_FEATURE_TOUCH_WHEEL=1
    -DHW_FEATURE_SD_CARD=1
    -DHW_FEATURE_AUDIO_DAC=1
    -DHW_FEATURE_TFT_DISPLAY=1
    -DHW_FEATURE_PHYSICAL_BTNS=1

lib_deps = 
    adafruit/Adafruit MPR121@^1.1.0
    adafruit/Adafruit GFX Library@^1.11.5
    adafruit/Adafruit BusIO@^1.14.1
    adafruit/Adafruit ST7735 and ST7789 Library@^1.10.4
    earlephilhower/ESP8266Audio@^1.9.7
    bblanchon/ArduinoJson@^6.21.3
    
; Board configuration for ESP32-PICO-V3-02
board_build.partitions = default.csv
board_build.filesystem = littlefs
board_build.flash_mode = dio
board_build.f_cpu = 240000000L
board_build.f_flash = 80000000L
board_build.flash_size = 4MB

; Upload configuration
upload_port = /dev/ttyUSB0
; Uncomment and modify for your system:
; upload_port = COM3          ; Windows
; upload_port = /dev/tty.usbserial-* ; macOS

; Monitor configuration  
monitor_port = /dev/ttyUSB0
; Uncomment and modify for your system:
; monitor_port = COM3         ; Windows
; monitor_port = /dev/tty.usbserial-* ; macOS

; Debug configuration
debug_tool = esp-prog
debug_init_break = tbreak setup
debug_load_mode = manual

; Additional environments for different build configurations
[env:esp32-hardware-debug]
extends = env:esp32-hardware
build_flags = 
    ${env:esp32-hardware.build_flags}
    -DDEBUG_MODE=1
    -DVERBOSE_LOGGING=1
    -DTOUCH_DEBUG_ENABLED=1

[env:esp32-hardware-release]
extends = env:esp32-hardware
build_flags = 
    ${env:esp32-hardware.build_flags}
    -DCORE_DEBUG_LEVEL=0
    -DRELEASE_BUILD=1
    -Os
    -DNDEBUG

; Host build environments for emulation and testing
[env:native-emulation]
platform = native
framework = 
build_flags = 
    -DPLATFORM_HOST            ; Host platform flag
    -DIZOD_FW_VERSION=\"1.0.0\"
    -DPLUGIN_SYSTEM_ENABLED    ; Enable plugin system
    -DAUDIO_SAMPLE_RATE=44100  ; CD quality audio
    -DDISPLAY_WIDTH=240        ; Display width
    -DDISPLAY_HEIGHT=320       ; Display height
    -DHARDWARE_CONFIG_H        ; Use hardware_config.h for pin definitions
    -DHAL_EMULATION=1          ; Enable HAL emulation
    -std=c++17
    -pthread
    ; -I/opt/homebrew/include/SDL2
    ; -L/opt/homebrew/lib
    ; -lSDL2
    ; -lSDL2_ttf
    
    ; Hardware feature flags (emulated)
    -DHW_FEATURE_TOUCH_WHEEL=1
    -DHW_FEATURE_SD_CARD=1
    -DHW_FEATURE_AUDIO_DAC=1
    -DHW_FEATURE_TFT_DISPLAY=1
    -DHW_FEATURE_PHYSICAL_BTNS=1

lib_deps = 
    ; SDL2 for graphics and audio emulation (system package)

lib_ldf_mode = deep+
lib_extra_dirs = /opt/homebrew/lib
    
build_src_filter = 
    +<*>
    -<hal/esp32/>              ; Exclude ESP32-specific HAL
    -<audio.cpp>               ; Exclude Arduino-dependent audio files
    -<audio_mp3.cpp>           ; Exclude Arduino-dependent audio files
    -<audio_wav.cpp>           ; Exclude Arduino-dependent audio files
    -<app_state.cpp>           ; Exclude Arduino-dependent app state
    -<core/hardware_validation.cpp> ; Exclude Arduino-dependent hardware validation
    -<touch/>                  ; Exclude Arduino-dependent touch files
    -<plugin/>                 ; Exclude Arduino-dependent plugin files
    -<main.cpp>                ; Exclude Arduino-dependent main
    -<touch_wheel.cpp>         ; Exclude Arduino-dependent touch wheel
    -<ui_display.cpp>          ; Exclude Arduino-dependent UI display
    -<hal/host/hal_display_sdl2.cpp>    ; Exclude SDL2 display HAL
    +<hal/host/hal_display_simple.cpp>  ; Include simple display HAL
    +<hal/host/hal_system_host.cpp>     ; Include host system HAL
    +<hal_main.cpp>            ; Include HAL demo

[env:native-test]
platform = native
framework = 
build_flags = 
    -DPLATFORM_HOST            ; Host platform flag
    -DIZOD_FW_VERSION=\"1.0.0\"
    -DPLUGIN_SYSTEM_ENABLED    ; Enable plugin system
    -DHAL_EMULATION=1          ; Enable HAL emulation
    -DUNIT_TESTING=1           ; Enable unit testing
    -std=c++17
    -pthread
    -g                         ; Debug symbols
    -O0                        ; No optimization for debugging
    
    ; Minimal feature flags for testing
    -DHW_FEATURE_TOUCH_WHEEL=1
    -DHW_FEATURE_TFT_DISPLAY=1

lib_deps = 
    throwtheswitch/Unity@^2.5.2  ; Unit testing framework
    
build_src_filter = 
    +<*>
    -<hal/esp32/>              ; Exclude ESP32-specific HAL
    -<audio.cpp>               ; Exclude Arduino-dependent audio files
    -<audio_mp3.cpp>           ; Exclude Arduino-dependent audio files
    -<audio_wav.cpp>           ; Exclude Arduino-dependent audio files
    -<app_state.cpp>           ; Exclude Arduino-dependent app state
    -<core/hardware_validation.cpp> ; Exclude Arduino-dependent hardware validation
    -<touch/>                  ; Exclude Arduino-dependent touch files
    -<plugin/>                 ; Exclude Arduino-dependent plugin files
    -<main.cpp>                ; Exclude Arduino-dependent main
    -<touch_wheel.cpp>         ; Exclude Arduino-dependent touch wheel
    -<ui_display.cpp>          ; Exclude Arduino-dependent UI display
    -<hal/host/hal_display_sdl2.cpp>    ; Exclude SDL2 display HAL
    +<hal/host/hal_display_simple.cpp>  ; Include simple display HAL
    -<hal_main.cpp>                     ; Exclude HAL demo main
    +<hal/host/hal_system_host.cpp>     ; Include host system HAL

test_framework = unity
test_build_src = true
